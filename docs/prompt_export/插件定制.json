[
    {
        "act": "文档转Markdown_us",
        "prompt": "\"\"\"\"{{{v}}}\"\"\"\"Please use Markdown format for paragraph layout for the above three double-quoted requirement documents. I don't need any suggestions or tips from you, you just need to convert the text I provide to Markdown format and return it to me.",
        "source": "spike"
    },
    {
        "act": "文档转Markdown",
        "prompt": "\"\"\"\n{{{v}}}\n\"\"\"\n以上三个双引号内的文档请按照文本语意使用Markdown格式进行段落排版，在每个标题下方的内容，尽量细化到3到4级大纲，我不需要你的任何建议或提示，你只需要将我提供的文档转换为Markdown格式并返回给我。",
        "source": "spike"
    },
    {
        "act": "文档转Markdown_分割",
        "prompt": "\"\"\"\n{{{v}}}\n\"\"\"\n以上三个双引号内的文档请按照文本语意使用Markdown格式进行段落排版，返回数据时请遵循以下要求：\n在每个标题下方的内容，尽量细化到3到4级大纲。\n每个大模块或每个二级标题下使用markdown---分隔符进行拆分。",
        "source": "spike"
    },
    {
        "act": "接口文档转测试用例",
        "prompt": "你是一个专业的测试工程师，请阅读以下三个双引号括起来接口文档，自己进行需求分析，编写接口测试用例\n\"\"\"{{{v}}}\"\"\"\n编写用例时，请遵循以下需求：\n每个接口地址都需要覆盖传参校验、组合传参校验、异常情况处理测试\n传参需要写入整个body，预期结果需要包含响应码，传参如果是Json，需要带上换行格式\n返回格式要求：\n以Markdown表格返回，表头标题：| 所属模块 | 接口描述 | 接口地址 | 请求类型 | 请求头 | 传参 | 验证点 | 预期结果 |",
        "source": "spike"
    },
    {
        "act": "总结摘要提取",
        "prompt": "以下三个引号内的文本为音频文件提取的信息，请按照上下文语意修复错别字或段落，最后总结音频文件内容和待办信息。\n\"\"\"\n{{{v}}}\n\"\"\"",
        "source": "spike"
    },
    {
        "act": "三方评审补充用例场景",
        "prompt": "```\n{{{v}}}\n```\n接下来你将扮演三个不同角色的角度理解上述Markdown代码块内的测试用例，并模拟一个用例评审会，具体角色设定如下：\n产品经理：以产品经理的角度理解上述用例，评估测试用例是否能保证功能的质量和稳定性。根据产品易用性，用户角度等补充上述测试用例缺失的测试点。\n开发工程师：以开发工程师的角度理解上述用例，评估测试用例是否能保证功能的质量和稳定性。根据可以产生的影响面、是否存在兼容问题。\n测试工程师：评估整体用例是否能保证功能的质量和稳定性，听取产品经理和开发工程师的建议，然后使用等价类划分法，边界值分析法以及错误判断表法等等补充上下文缺失的用例场景。\n你的回答必须使用原测试用例的数据结构格式，并且保证被Python json.load解析，如下所示:\n```\n[[补充的用例1], [补充的用例2], [....]]\n```",
        "source": "spike"
    },
    {
        "act": "解释报错",
        "prompt": "```\n{{{v}}}\n```\n解释以上报错",
        "source": "spike"
    },
    {
        "act": "补充测试用例场景",
        "prompt": "```\n{{{v}}}\n```\n以测试工程师的角度理解上述Markdown代码块内的测试用例，评估整体用例是否能保证功能的质量和稳定性。\n然后使用等价类划分法，边界值分析法以及错误判断表法等等补充上下文缺失的用例场景。\n你的回答必须使用原测试用例的数据结构格式，并且保证被Python json.load解析，如下所示:\n```\n[[补充的用例1], [补充的用例2], [....]]\n```",
        "source": "spike"
    },
    {
        "act": "文档转测试用例",
        "prompt": "你是一个将扮演一位专业的测试工程师，阅读下面三个双引号内的文档，充分理解需求任务后，编写测试用例。\n\"\"\"\"\n{{{v}}}\n\"\"\"\"\n\n为保证用例可执行性及可读性，编写用例时你将遵循一个验证点对应一条用例与预期结果，用例不口语化，不轻易使用”或“ “和” ”并“等词语。\n同时，你将以Markdown表格格式返回，表头格式如下：\n| 用例标签 | 用例名称 | 前置条件 | 操作步骤 | 预期结果 | 优先级 |\n\n表头字段说明：\n用例标签：提取需求要点，可以按照需求分类、子功能或其他逻辑进行组织。\n用例名称：包括但不限于对需求正向流程、逆向流程等等使用等价类划分法，边界值分析法以及错误判断表法等等设计用例场景验证点，并以验证点作为用例名称，尽可能发挥你的辩证思想，覆盖每个需求点和测试点。\n前置条件：上下文要求的条件、环境等，多个条件以数字编号+具体条件+<br>换行如果执行不需要前置条件，则使用一个“无”占位。\n操作步骤：测试用例的步骤描述，需要清晰，明了，没有歧义，多个步骤以数字编号+具体步骤+<br>换行。\n预期结果：\t\"文字描述\"的测试用例执行的用户期望值，一般要求只能包含一个检查点，需要清晰，明了。\n优先级：P0：冒烟用例、P1：核心用例 、P2：基础用例、P3：回归用例",
        "source": "spike"
    },
    {
        "act": "提取文档测试点",
        "prompt": "\"\"\"\n{{{v}}}\n\"\"\"\n请认真阅读以上三个引号内的需求文档，接下来，你将扮演一个测试工程师，了解产品的功能和特性。理解产品的预期行为和用户期望，并以此基础，并按照以下要点提取测试点、验证点。\n\n分解需求：将每个需求进一步分解成更小的功能点或用户故事。这有助于更细致地提取相应的测试点。\n\n注重用户体验：将用户体验作为测试点的一部分，例如界面的友好性、易用性和响应时间等方面。确保产品符合用户期望。\n\n考虑不同的场景：针对不同的使用场景提取测试点，例如正常场景、异常场景、边界场景等。通过考虑不同的场景，可以提高测试覆盖率。\n\n然后根据你分析的测试点，去清楚地理解每个测试点的含义和目的，分析测试点的含义和预期结果，推断出相应的测试目的.\n最终，你将分析的内容按照以下格式返回给我，每个需求点下尽量细化到3到4级大纲，每两个需求点，使用markdwon---分页符号分隔文本：\n\n1. xx需求功能点:\n  - 需求功能点上下文相关细节\n    - 拆分的独立功能点或验证点\n    - 功能点、验证点与需求关联的操作路径\n  - 详细验证点、测试场景\n2. xx需求功能点:\n  - 需求功能点上下文相关细节\n    - 拆分的独立功能点或验证点\n    - 功能点、验证点与需求关联的操作路径\n  - 详细验证点、测试场景\n---",
        "source": "spike"
    }
]